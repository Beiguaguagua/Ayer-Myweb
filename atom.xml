<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>🐱BeiGua&#39;s blogger🐕</title>
  
  
  <link href="https://www.coder-life.top/atom.xml" rel="self"/>
  
  <link href="https://www.coder-life.top/"/>
  <updated>2022-11-21T07:09:31.279Z</updated>
  <id>https://www.coder-life.top/</id>
  
  <author>
    <name>BieGua</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Vue修改主题的方法</title>
    <link href="https://www.coder-life.top/2022/11/21/Vue%E4%BF%AE%E6%94%B9%E4%B8%BB%E9%A2%98%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <id>https://www.coder-life.top/2022/11/21/Vue%E4%BF%AE%E6%94%B9%E4%B8%BB%E9%A2%98%E7%9A%84%E6%96%B9%E6%B3%95/</id>
    <published>2022-11-21T06:55:26.000Z</published>
    <updated>2022-11-21T07:09:31.279Z</updated>
    
    <content type="html"><![CDATA[<h3 id="实现思路"><a href="#实现思路" class="headerlink" title="实现思路"></a>实现思路</h3><h5 id="1-通过判定-icon-图标去实现黑白的判断"><a href="#1-通过判定-icon-图标去实现黑白的判断" class="headerlink" title="(1)通过判定 icon 图标去实现黑白的判断"></a>(1)通过判定 icon 图标去实现黑白的判断</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 这是vue的伪代码 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 这是其他组件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;header&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">i</span> <span class="attr">:class</span>=<span class="string">&quot;icon&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">&quot;less&quot;</span> <span class="attr">scoped</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-id">#app</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="comment">/* 后续整体颜色都可以通过var(--themeColor)去实现 */</span></span></span><br><span class="line"><span class="language-css">    <span class="attr">--themeColor</span>: white;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><span id="more"></span><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span>&#123;</span><br><span class="line">  <span class="title function_">data</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="comment">// dark情况下:icon:&#x27;xxx-xxx-dark&#x27;</span></span><br><span class="line">      <span class="attr">icon</span>:<span class="string">&#x27;xxx-xxx-white&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">methods</span>:&#123;</span><br><span class="line">    <span class="comment">// 这是使用busevent事件总线传值</span></span><br><span class="line">    <span class="title function_">go</span>(<span class="params"></span>)&#123;</span><br><span class="line">      bus.$emit(<span class="string">&#x27;icon&#x27;</span>,<span class="variable language_">this</span>.<span class="property">icon</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h5 id="2-然后通过-busEvent-js-传值"><a href="#2-然后通过-busEvent-js-传值" class="headerlink" title="(2)然后通过 busEvent.js 传值"></a>(2)然后通过 busEvent.js 传值</h5><h5 id="3-实现这些的前提-在-APP-vue-中得先-var-一个整体颜色—–实现代码如下"><a href="#3-实现这些的前提-在-APP-vue-中得先-var-一个整体颜色—–实现代码如下" class="headerlink" title="(3)实现这些的前提:在 APP.vue 中得先 var 一个整体颜色—–实现代码如下"></a>(3)实现这些的前提:在 APP.vue 中得先 var 一个整体颜色—–实现代码如下</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 这是vue的伪代码 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">&quot;less&quot;</span> <span class="attr">scoped</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-id">#app</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="comment">/* 后续整体颜色都可以通过var(--themeColor)去实现 */</span></span></span><br><span class="line"><span class="language-css">    <span class="attr">--themeColor</span>: white;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="comment">//用于接受其他页面传来的icon</span></span><br><span class="line">      <span class="attr">iconName</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">methods</span>: &#123;</span><br><span class="line">    <span class="comment">// 这是使用busevent事件总线传值</span></span><br><span class="line">    <span class="comment">// 这里的valStore是在Vuex里面的</span></span><br><span class="line">    <span class="title function_">get</span>(<span class="params"></span>) &#123;</span><br><span class="line">      bus.$on(<span class="string">&#x27;icon&#x27;</span>, <span class="function"><span class="params">val</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">iconName</span> = val</span><br><span class="line">        <span class="keyword">switch</span> (<span class="variable language_">this</span>.<span class="property">iconName</span>) &#123;</span><br><span class="line">          <span class="keyword">case</span> <span class="string">&#x27;xxx-xxx-white&#x27;</span>:</span><br><span class="line">            docment.<span class="title function_">querrySelector</span>(<span class="string">&#x27;#app&#x27;</span>).<span class="property">style</span>.<span class="title function_">setProptype</span>(<span class="string">&#x27;--themeColor&#x27;</span>, valStore)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">          <span class="keyword">case</span> <span class="string">&#x27;xxx-xxx-dark&#x27;</span>:</span><br><span class="line">            docment.<span class="title function_">querrySelector</span>(<span class="string">&#x27;#app&#x27;</span>).<span class="property">style</span>.<span class="title function_">setProptype</span>(<span class="string">&#x27;--themeColor&#x27;</span>, valStore)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;实现思路&quot;&gt;&lt;a href=&quot;#实现思路&quot; class=&quot;headerlink&quot; title=&quot;实现思路&quot;&gt;&lt;/a&gt;实现思路&lt;/h3&gt;&lt;h5 id=&quot;1-通过判定-icon-图标去实现黑白的判断&quot;&gt;&lt;a href=&quot;#1-通过判定-icon-图标去实现黑白的判断&quot; class=&quot;headerlink&quot; title=&quot;(1)通过判定 icon 图标去实现黑白的判断&quot;&gt;&lt;/a&gt;(1)通过判定 icon 图标去实现黑白的判断&lt;/h5&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 这是vue的伪代码 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 这是其他组件 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;template&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;header&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;:class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;icon&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;i&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;template&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;style&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;lang&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;less&amp;quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;scoped&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;language-css&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;language-css&quot;&gt;  &lt;span class=&quot;selector-id&quot;&gt;#app&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;language-css&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/* 后续整体颜色都可以通过var(--themeColor)去实现 */&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;language-css&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;--themeColor&lt;/span&gt;: white;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;language-css&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;language-css&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;style&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>模糊查询的实现</title>
    <link href="https://www.coder-life.top/2022/10/15/%E6%A8%A1%E7%B3%8A%E6%9F%A5%E8%AF%A2%E7%9A%84%E5%AE%9E%E7%8E%B0/"/>
    <id>https://www.coder-life.top/2022/10/15/%E6%A8%A1%E7%B3%8A%E6%9F%A5%E8%AF%A2%E7%9A%84%E5%AE%9E%E7%8E%B0/</id>
    <published>2022-10-15T08:18:17.000Z</published>
    <updated>2022-10-15T08:21:50.037Z</updated>
    
    <content type="html"><![CDATA[<p>1.主要用到的是 sql 的语法中的模糊查询</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> bm_book <span class="keyword">where</span> book_name <span class="keyword">like</span> ?</span><br><span class="line"><span class="operator">/</span><span class="operator">/</span> <span class="string">&#x27;?&#x27;</span> <span class="operator">=</span> <span class="operator">%</span>e<span class="operator">%</span></span><br></pre></td></tr></table></figure><span id="more"></span><p>2.这是代码实现</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">exports</span>.<span class="property">searchBook</span> = <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> bookinfo = req.<span class="property">body</span></span><br><span class="line">  <span class="keyword">const</span> sql = <span class="string">&#x27;select * from bm_book where book_name=?&#x27;</span></span><br><span class="line">  db.<span class="title function_">query</span>(sql, bookinfo.<span class="property">bookname</span>, <span class="function">(<span class="params">err, results</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      res.<span class="title function_">cc</span>(err)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> sqlStr = <span class="string">&#x27;select * from bm_book where book_name like ?&#x27;</span></span><br><span class="line">      <span class="keyword">const</span> data_book = <span class="string">&#x27;%&#x27;</span> + bookinfo.<span class="property">bookname</span> + <span class="string">&#x27;%&#x27;</span></span><br><span class="line">      db.<span class="title function_">query</span>(sqlStr, [data_book], <span class="function">(<span class="params">err, results</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (err) <span class="keyword">return</span> res.<span class="title function_">cc</span>(err)</span><br><span class="line">        res.<span class="title function_">send</span>(&#123;</span><br><span class="line">          <span class="attr">status</span>: <span class="number">0</span>,</span><br><span class="line">          <span class="attr">msg</span>: <span class="string">&#x27;查询成功&#x27;</span>,</span><br><span class="line">          <span class="attr">data</span>: results</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.这是成功后获取的数据</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;status&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;msg&quot;</span>: <span class="string">&quot;查询成功&quot;</span>,</span><br><span class="line">    <span class="string">&quot;data&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;id&quot;</span>: <span class="number">2</span>,</span><br><span class="line">            <span class="string">&quot;book_name&quot;</span>: <span class="string">&quot;大王子&quot;</span>,</span><br><span class="line">            <span class="string">&quot;book_author&quot;</span>: <span class="string">&quot;321&quot;</span>,</span><br><span class="line">            <span class="string">&quot;book_publish&quot;</span>: <span class="string">&quot;321&quot;</span>,</span><br><span class="line">            <span class="string">&quot;book_page&quot;</span>: <span class="number">123</span>,</span><br><span class="line">            <span class="string">&quot;book_publisher&quot;</span>: <span class="string">&quot;321&quot;</span>,</span><br><span class="line">            <span class="string">&quot;book_catalog&quot;</span>: <span class="string">&quot;123&quot;</span>,</span><br><span class="line">            <span class="string">&quot;book_digest&quot;</span>: <span class="string">&quot;321&quot;</span>,</span><br><span class="line">            <span class="string">&quot;book_stats&quot;</span>: <span class="string">&quot;已借出&quot;</span>,</span><br><span class="line">            <span class="string">&quot;book_start&quot;</span>: <span class="string">&quot;2022-10-14&quot;</span>,</span><br><span class="line">            <span class="string">&quot;book_end&quot;</span>: <span class="string">&quot;2022-10-22&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;id&quot;</span>: <span class="number">3</span>,</span><br><span class="line">            <span class="string">&quot;book_name&quot;</span>: <span class="string">&quot;小王子&quot;</span>,</span><br><span class="line">            <span class="string">&quot;book_author&quot;</span>: <span class="string">&quot;安托万·德·圣-埃克苏佩里&quot;</span>,</span><br><span class="line">            <span class="string">&quot;book_publish&quot;</span>: <span class="string">&quot;教育局出版社&quot;</span>,</span><br><span class="line">            <span class="string">&quot;book_page&quot;</span>: <span class="number">200</span>,</span><br><span class="line">            <span class="string">&quot;book_publisher&quot;</span>: <span class="string">&quot;2014年&quot;</span>,</span><br><span class="line">            <span class="string">&quot;book_catalog&quot;</span>: <span class="string">&quot;《小王子》第一章（初次了解到讲述者是一个飞行员以及他对大人的想法）《小王子》第一章（初次了解到讲述者是一个飞行员以及他对大人的想法）《小王子》第一章（初次了解到讲述者是一个飞行员以及他对大人的想法）《小王子》第二章（讲述者在沙漠中坠机以及结识小王子）《小王子》第二章（讲述者在沙漠中坠机以及结识小王子）《小王子》第二章（讲述者在沙漠中坠机以及结识小王子）&quot;</span>,</span><br><span class="line">            <span class="string">&quot;book_digest&quot;</span>: <span class="string">&quot;小说叙述者是个飞行员，他在故事一开始告诉读者，他在大人世界找不到一个说话投机的人，因为大人都太讲实际了。接着，飞行员讲了六年前他因飞机故障迫降在撒哈拉沙漠遇见小王子的故事。神秘的小王子来自另一个星球。飞行员讲了小王子和他的玫瑰的故事。小王子为什么离开自己的星球；在抵达地球之前，他又访问过哪些星球。他转述了小王子对六个星球的历险，他遇见了国王、爱虚荣的人、酒鬼、商人、点灯人、地理学家、蛇、三枚花瓣的沙漠花、玫瑰园、扳道工、商贩、狐狸以及我们的叙述者飞行员本人。&quot;</span>,</span><br><span class="line">            <span class="string">&quot;book_stats&quot;</span>: <span class="string">&quot;已借出&quot;</span>,</span><br><span class="line">            <span class="string">&quot;book_start&quot;</span>: <span class="string">&quot;2022-10-14&quot;</span>,</span><br><span class="line">            <span class="string">&quot;book_end&quot;</span>: <span class="string">&quot;2022-10-21&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;1.主要用到的是 sql 的语法中的模糊查询&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; bm_book &lt;span class=&quot;keyword&quot;&gt;where&lt;/span&gt; book_name &lt;span class=&quot;keyword&quot;&gt;like&lt;/span&gt; ?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;#x27;?&amp;#x27;&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;%&lt;/span&gt;e&lt;span class=&quot;operator&quot;&gt;%&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    
    <category term="Node.js" scheme="https://www.coder-life.top/tags/Node-js/"/>
    
  </entry>
  
  <entry>
    <title>Vue的指令</title>
    <link href="https://www.coder-life.top/2022/08/10/Vue%E5%85%A5%E9%97%A8%E4%B9%8B%E6%8C%87%E4%BB%A4/"/>
    <id>https://www.coder-life.top/2022/08/10/Vue%E5%85%A5%E9%97%A8%E4%B9%8B%E6%8C%87%E4%BB%A4/</id>
    <published>2022-08-10T09:29:36.000Z</published>
    <updated>2022-08-10T10:00:50.960Z</updated>
    
    <content type="html"><![CDATA[<h3 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h3><ul><li>内容渲染指令</li><li>属性绑定指令</li><li>事件绑定指令</li><li>双向绑定指令</li><li>条件渲染指令</li><li>列表渲染指令</li></ul><h3 id="内容渲染指令"><a href="#内容渲染指令" class="headerlink" title="内容渲染指令"></a>内容渲染指令</h3><p>插值表达式:将需要的值插入进去就可以了,不会覆盖标签内的其余内容</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span>用户名是:&#123;&#123; username &#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">    <span class="attr">el</span>:<span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>:&#123;</span><br><span class="line">        <span class="attr">username</span>:<span class="string">&#x27;zhangsan&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>v-text 可以把值插入到标签里,但是会覆盖标签内的其余内容</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-text</span>=<span class="string">&quot;app&quot;</span>&gt;</span>用户名是:&#123;&#123; username &#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">    <span class="attr">el</span>:<span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>:&#123;</span><br><span class="line">        <span class="attr">username</span>:<span class="string">&#x27;zhangsan&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>v-html 适用于渲染html的元素</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span> <span class="attr">v-html</span>=<span class="string">&quot;info&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">    <span class="attr">el</span>:<span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>:&#123;</span><br><span class="line">        <span class="attr">info</span>:<span class="string">&#x27;&lt;h4 style=&quot;color:red;font-weight:blod&quot;&gt;我是zhangsan&lt;/h4&gt;&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="属性绑定指令"><a href="#属性绑定指令" class="headerlink" title="属性绑定指令"></a>属性绑定指令</h3><p>v-bind 可以简写为’:’</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">:placeholder</span>=<span class="string">&quot;tips&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>&#123;&#123; tips &#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">    <span class="attr">el</span>:<span class="string">&quot;#app&quot;</span>,</span><br><span class="line">    <span class="attr">data</span>:&#123;</span><br><span class="line">        <span class="attr">tips</span>:<span class="string">&#x27;我是张三&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="事件绑定指令"><a href="#事件绑定指令" class="headerlink" title="事件绑定指令"></a>事件绑定指令</h3><p>v-on 可以简写为@</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>count的值是:&#123;&#123; count &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- add或者sub后面加上小括号就可以传值 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;add&quot;</span>&gt;</span>+1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;sub&quot;</span>&gt;</span>-1<span class="tag">&lt;<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">    <span class="attr">el</span>:<span class="string">&quot;#app&quot;</span>,</span><br><span class="line">    <span class="attr">data</span>:&#123;</span><br><span class="line">        <span class="attr">count</span>:<span class="number">0</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 定义事件处理函数</span></span><br><span class="line">    <span class="attr">methods</span>:&#123;</span><br><span class="line">        <span class="title function_">add</span>(<span class="params"></span>)&#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">count</span> +=<span class="number">1</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="title function_">sub</span>(<span class="params"></span>)&#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">count</span> -=<span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="双向绑定指令"><a href="#双向绑定指令" class="headerlink" title="双向绑定指令"></a>双向绑定指令</h3><p>v-model 只能和input,textarea,select一起使用</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>用户名是:&#123;&#123; username &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;username&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">    <span class="attr">el</span>:<span class="string">&quot;#app&quot;</span>,</span><br><span class="line">    <span class="attr">data</span>:&#123;</span><br><span class="line">        <span class="attr">username</span>:<span class="string">&#x27;zhangsan&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="条件渲染指令"><a href="#条件渲染指令" class="headerlink" title="条件渲染指令"></a>条件渲染指令</h3><p>v-if 如果不符合条件,会把该标签删除,之后符合条件就会复原.<br>v-show 如果不符合条件,会把标签的display改为none,否则就为block.控制display</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- v-if是直接删除元素来隐藏元素 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">v-if</span>=<span class="string">&quot;flag&quot;</span>&gt;</span>这是被v-if控制的元素<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- v-show是控制display来隐藏元素的 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">v-show</span>=<span class="string">&quot;flag&quot;</span>&gt;</span>这是被v-show控制的元素<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&quot;type===&#x27;A&#x27;&quot;</span>&gt;</span>优秀<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else-if</span>=<span class="string">&quot;type===&#x27;B&#x27;&quot;</span>&gt;</span>良好<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else-if</span>=<span class="string">&quot;type===&#x27;C&#x27;&quot;</span>&gt;</span>一般<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line"><span class="attr">el</span>:<span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line"><span class="attr">data</span>:&#123;</span><br><span class="line"><span class="attr">flag</span>: <span class="literal">true</span>,</span><br><span class="line"><span class="attr">type</span>: <span class="string">&#x27;A&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="列表渲染指令"><a href="#列表渲染指令" class="headerlink" title="列表渲染指令"></a>列表渲染指令</h3><p>v-for 官方规定:使用v-for都必须有一个:key的属性</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;#app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>索引<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>ID<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>名字<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span> <span class="attr">v-for</span>=<span class="string">&quot;(item,index) in li&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;item.id&quot;</span> <span class="attr">:title</span>=<span class="string">&quot;item.name&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; index &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; item.id &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; item.name &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">    <span class="attr">el</span>:<span class="string">&quot;#app&quot;</span>,</span><br><span class="line">    <span class="attr">data</span>:&#123;</span><br><span class="line">        <span class="attr">li</span>:[</span><br><span class="line">            &#123;<span class="attr">id</span>:<span class="number">1</span>,<span class="attr">name</span>:<span class="string">&#x27;zs&#x27;</span>&#125;,</span><br><span class="line">            &#123;<span class="attr">id</span>:<span class="number">2</span>,<span class="attr">name</span>:<span class="string">&#x27;ls&#x27;</span>&#125;,</span><br><span class="line">            &#123;<span class="attr">id</span>:<span class="number">3</span>,<span class="attr">name</span>:<span class="string">&#x27;ww&#x27;</span>&#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;分类&quot;&gt;&lt;a href=&quot;#分类&quot; class=&quot;headerlink&quot; title=&quot;分类&quot;&gt;&lt;/a&gt;分类&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;内容渲染指令&lt;/li&gt;
&lt;li&gt;属性绑定指令&lt;/li&gt;
&lt;li&gt;事件绑定指令&lt;/li&gt;
&lt;li&gt;双向绑定指令&lt;/li&gt;
&lt;li&gt;</summary>
      
    
    
    
    
    <category term="Vue" scheme="https://www.coder-life.top/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>关于上篇文章登录注册接口中bug修复</title>
    <link href="https://www.coder-life.top/2022/08/04/%E5%85%B3%E4%BA%8E%E4%B8%8A%E7%AF%87%E6%96%87%E7%AB%A0%E7%99%BB%E5%BD%95%E6%B3%A8%E5%86%8C%E6%8E%A5%E5%8F%A3%E4%B8%ADbug%E4%BF%AE%E5%A4%8D/"/>
    <id>https://www.coder-life.top/2022/08/04/%E5%85%B3%E4%BA%8E%E4%B8%8A%E7%AF%87%E6%96%87%E7%AB%A0%E7%99%BB%E5%BD%95%E6%B3%A8%E5%86%8C%E6%8E%A5%E5%8F%A3%E4%B8%ADbug%E4%BF%AE%E5%A4%8D/</id>
    <published>2022-08-04T06:34:50.000Z</published>
    <updated>2022-08-04T06:42:58.761Z</updated>
    
    <content type="html"><![CDATA[<h2 id="BUG描述"><a href="#BUG描述" class="headerlink" title="BUG描述"></a>BUG描述</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">Cannot</span> <span class="string">set</span> <span class="string">headers</span> <span class="string">after</span> <span class="string">they</span> <span class="string">are</span> <span class="string">sent</span> <span class="string">to</span> <span class="string">the</span> <span class="string">client</span></span><br><span class="line"><span class="string">翻译过来就是:发送到客户端后无法设置标头</span></span><br></pre></td></tr></table></figure><h2 id="发送这个bug的原因"><a href="#发送这个bug的原因" class="headerlink" title="发送这个bug的原因"></a>发送这个bug的原因</h2><p>原因:在上个博客中app.js中的res.cc和router_handler的user.js中的regUser模块的判定用户名是否被占用中的res.cc发生冲突,因为在执行完判定后,它自动去执行了加入数据库那堆代码中的res.cc(err),相当于执行了两次.客户端发送一次请求,服务器给出了两次反映</p><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><p>思路:给判定用户名中再添加一个if语句来判定,如果没被占用就执行insert操作,如果被占用,就直接返回错误信息</p><ul><li><p>原代码:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">exports</span>.<span class="property">regUser</span> = <span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">const</span> userinfo = req.<span class="property">body</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> sql = <span class="string">&#x27;select * from ev_users where username=?&#x27;</span></span><br><span class="line">    db.<span class="title function_">query</span>(sql,userinfo.<span class="property">username</span>,<span class="function">(<span class="params">err,results</span>)=&gt;</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(err) <span class="keyword">return</span> res.<span class="title function_">cc</span>(err)</span><br><span class="line">        <span class="keyword">if</span>(results.<span class="property">length</span>&gt;<span class="number">0</span>) <span class="keyword">return</span> res.<span class="title function_">cc</span>(<span class="string">&#x27;用户名已经被占用&#x27;</span>)</span><br><span class="line">        <span class="comment">// console.log(results.length),如果为1,说明已经有该用户,如果为0,说明没有该用户,可以用于注册</span></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="comment">// 加密密码</span></span><br><span class="line">        userinfo.<span class="property">password</span> = bcyptjs.<span class="title function_">hashSync</span>(userinfo.<span class="property">password</span>,<span class="number">10</span>)</span><br><span class="line">    <span class="comment">// 执行sql</span></span><br><span class="line">        <span class="keyword">const</span> sqlStr = <span class="string">&#x27;insert into ev_users set ?&#x27;</span></span><br><span class="line">        db.<span class="title function_">query</span>(sqlStr,&#123;<span class="attr">username</span>:userinfo.<span class="property">username</span>,<span class="attr">password</span>:userinfo.<span class="property">password</span>&#125;,<span class="function">(<span class="params">err,results</span>)=&gt;</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(err) <span class="keyword">return</span> res.<span class="title function_">cc</span>(err)</span><br><span class="line">            <span class="keyword">if</span>(results.<span class="property">affectedRows</span> !== <span class="number">1</span>) <span class="keyword">return</span> res.<span class="title function_">cc</span>(<span class="string">&#x27;注册用户失败&#x27;</span>,<span class="number">1</span>)</span><br><span class="line">            res.<span class="title function_">cc</span>(<span class="string">&#x27;注册成功&#x27;</span>,<span class="number">0</span>)</span><br><span class="line">        &#125;)  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>修改后的代码:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">exports</span>.<span class="property">regUser</span> = <span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">const</span> userinfo = req.<span class="property">body</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> sql = <span class="string">&#x27;select * from ev_users where username=?&#x27;</span></span><br><span class="line">    db.<span class="title function_">query</span>(sql,userinfo.<span class="property">username</span>,<span class="function">(<span class="params">err,results</span>)=&gt;</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(err) <span class="keyword">return</span> res.<span class="title function_">cc</span>(err)</span><br><span class="line">        <span class="keyword">if</span>(results.<span class="property">length</span>&gt;<span class="number">0</span>) <span class="keyword">return</span> res.<span class="title function_">cc</span>(<span class="string">&#x27;用户名已经被占用&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span>(results.<span class="property">length</span> != <span class="number">1</span>)&#123;</span><br><span class="line">        <span class="comment">// 加密密码</span></span><br><span class="line">        userinfo.<span class="property">password</span> = bcyptjs.<span class="title function_">hashSync</span>(userinfo.<span class="property">password</span>,<span class="number">10</span>)</span><br><span class="line">        <span class="comment">// 执行sql</span></span><br><span class="line">            <span class="keyword">const</span> sqlStr = <span class="string">&#x27;insert into ev_users set ?&#x27;</span></span><br><span class="line">            db.<span class="title function_">query</span>(sqlStr,&#123;<span class="attr">username</span>:userinfo.<span class="property">username</span>,<span class="attr">password</span>:userinfo.<span class="property">password</span>&#125;,<span class="function">(<span class="params">err,results</span>)=&gt;</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(err) <span class="keyword">return</span> res.<span class="title function_">cc</span>(err)</span><br><span class="line">                <span class="keyword">if</span>(results.<span class="property">affectedRows</span> !== <span class="number">1</span>) <span class="keyword">return</span> res.<span class="title function_">cc</span>(<span class="string">&#x27;注册用户失败&#x27;</span>,<span class="number">1</span>)</span><br><span class="line">                res.<span class="title function_">send</span>(&#123;</span><br><span class="line">                    <span class="attr">status</span>:<span class="number">0</span>,</span><br><span class="line">                    <span class="attr">msg</span>:<span class="string">&#x27;注册成功&#x27;</span>,</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;)  </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// console.log(results.length),如果为1,说明已经有该用户,如果为0,说明没有该用户,可以用于注册</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;BUG描述&quot;&gt;&lt;a href=&quot;#BUG描述&quot; class=&quot;headerlink&quot; title=&quot;BUG描述&quot;&gt;&lt;/a&gt;BUG描述&lt;/h2&gt;&lt;figure class=&quot;highlight yaml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;</summary>
      
    
    
    
    
    <category term="Node.js" scheme="https://www.coder-life.top/tags/Node-js/"/>
    
  </entry>
  
  <entry>
    <title>关于node.js书写登录注册接口</title>
    <link href="https://www.coder-life.top/2022/08/02/%E5%85%B3%E4%BA%8Enode.js%E4%B9%A6%E5%86%99%E7%99%BB%E5%BD%95%E6%B3%A8%E5%86%8C%E6%8E%A5%E5%8F%A3/"/>
    <id>https://www.coder-life.top/2022/08/02/%E5%85%B3%E4%BA%8Enode.js%E4%B9%A6%E5%86%99%E7%99%BB%E5%BD%95%E6%B3%A8%E5%86%8C%E6%8E%A5%E5%8F%A3/</id>
    <published>2022-08-02T06:45:00.000Z</published>
    <updated>2022-08-02T06:45:28.199Z</updated>
    
    <content type="html"><![CDATA[<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><h3 id="包准备"><a href="#包准备" class="headerlink" title="包准备"></a>包准备</h3><ul><li>@escook&#x2F;express-joi(使用验证规则)</li><li>joi(验证规则)</li><li>bcryptjs(密码加密和解密)</li><li>cors(解决跨域问题)</li><li>express(配置本地服务器)</li><li>mysql(导入数据库)</li></ul><h3 id="文件夹准备"><a href="#文件夹准备" class="headerlink" title="文件夹准备"></a>文件夹准备</h3><ul><li>db(装mysql的配置文件)</li><li>router(路由转接)</li><li>app.js(总端)</li><li>router_hanler(路由转接后进行函数处理)</li><li>schema(进行规则验证)</li></ul><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="db"><a href="#db" class="headerlink" title="db"></a>db</h3><ul><li>index.js<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> mysql = <span class="built_in">require</span>(<span class="string">&#x27;mysql&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> db = mysql.<span class="title function_">createPool</span>(&#123;</span><br><span class="line">    <span class="attr">host</span>:<span class="string">&#x27;127.0.0.1&#x27;</span>,</span><br><span class="line">    <span class="attr">user</span>:<span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">    <span class="attr">password</span>:<span class="string">&#x27;123456&#x27;</span>,</span><br><span class="line">    <span class="attr">database</span>:<span class="string">&#x27;my_db_01&#x27;</span>,</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 向外共享</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = db</span><br></pre></td></tr></table></figure></li></ul><h3 id="router"><a href="#router" class="headerlink" title="router"></a>router</h3><ul><li>user.js<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express= <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = express.<span class="title class_">Router</span>()</span><br><span class="line"><span class="comment">// 导入规则验证的中间件</span></span><br><span class="line"><span class="keyword">const</span> expressJoi = <span class="built_in">require</span>(<span class="string">&#x27;@escook/express-joi&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> userHandler = <span class="built_in">require</span>(<span class="string">&#x27;../router_handler/user&#x27;</span>)</span><br><span class="line"><span class="comment">// 导入规则验证文件</span></span><br><span class="line"><span class="keyword">const</span> &#123;reg_login_schema&#125; = <span class="built_in">require</span>(<span class="string">&#x27;../schema/user&#x27;</span>)</span><br><span class="line"></span><br><span class="line">router.<span class="title function_">post</span>(<span class="string">&#x27;/login&#x27;</span>,<span class="title function_">expressJoi</span>(reg_login_schema),userHandler.<span class="property">loginUser</span>)</span><br><span class="line"></span><br><span class="line">router.<span class="title function_">post</span>(<span class="string">&#x27;/reg&#x27;</span>,<span class="title function_">expressJoi</span>(reg_login_schema),userHandler.<span class="property">regUser</span>)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = router</span><br></pre></td></tr></table></figure></li></ul><h3 id="router-handler"><a href="#router-handler" class="headerlink" title="router_handler"></a>router_handler</h3><ul><li>user.js<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> db = <span class="built_in">require</span>(<span class="string">&#x27;../db/index&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> bcyptjs = <span class="built_in">require</span>(<span class="string">&#x27;bcryptjs&#x27;</span>)</span><br><span class="line"><span class="built_in">exports</span>.<span class="property">loginUser</span> = <span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">const</span> userinfo = req.<span class="property">body</span></span><br><span class="line">    <span class="keyword">const</span> sql = <span class="string">&#x27;select * from ev_users where username=?&#x27;</span></span><br><span class="line">    db.<span class="title function_">query</span>(sql,userinfo.<span class="property">username</span>,<span class="function">(<span class="params">err,results</span>)=&gt;</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(err) <span class="keyword">return</span> res.<span class="title function_">cc</span>(err)</span><br><span class="line">        <span class="keyword">if</span>(results.<span class="property">length</span> !== <span class="number">1</span>) <span class="keyword">return</span> res.<span class="title function_">cc</span>(<span class="string">&#x27;登录失败&#x27;</span>,<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">const</span> compareResult = bcyptjs.<span class="title function_">compareSync</span>(userinfo.<span class="property">password</span>,results[<span class="number">0</span>].<span class="property">password</span>)</span><br><span class="line">        <span class="keyword">if</span>(!compareResult) <span class="keyword">return</span> res.<span class="title function_">cc</span>(<span class="string">&#x27;登录失败:密码不正确&#x27;</span>,<span class="number">0</span>)</span><br><span class="line">        res.<span class="title function_">send</span>(&#123;</span><br><span class="line">            <span class="attr">status</span>:<span class="number">0</span>,</span><br><span class="line">            <span class="attr">msg</span>:<span class="string">&#x27;登录成功&#x27;</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">exports</span>.<span class="property">regUser</span> = <span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">const</span> userinfo = req.<span class="property">body</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> sql = <span class="string">&#x27;select * from ev_users where username=?&#x27;</span></span><br><span class="line">    db.<span class="title function_">query</span>(sql,userinfo.<span class="property">username</span>,<span class="function">(<span class="params">err,results</span>)=&gt;</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(err) <span class="keyword">return</span> res.<span class="title function_">cc</span>(err)</span><br><span class="line">        <span class="keyword">if</span>(results.<span class="property">length</span>&gt;<span class="number">0</span>) <span class="keyword">return</span> res.<span class="title function_">cc</span>(<span class="string">&#x27;用户名已经被占用&#x27;</span>)</span><br><span class="line">        <span class="comment">// console.log(results.length),如果为1,说明已经有该用户,如果为0,说明没有该用户,可以用于注册</span></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="comment">// 加密密码</span></span><br><span class="line">        userinfo.<span class="property">password</span> = bcyptjs.<span class="title function_">hashSync</span>(userinfo.<span class="property">password</span>,<span class="number">10</span>)</span><br><span class="line">    <span class="comment">// 执行sql</span></span><br><span class="line">        <span class="keyword">const</span> sqlStr = <span class="string">&#x27;insert into ev_users set ?&#x27;</span></span><br><span class="line">        db.<span class="title function_">query</span>(sqlStr,&#123;<span class="attr">username</span>:userinfo.<span class="property">username</span>,<span class="attr">password</span>:userinfo.<span class="property">password</span>&#125;,<span class="function">(<span class="params">err,results</span>)=&gt;</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(err) <span class="keyword">return</span> res.<span class="title function_">cc</span>(err)</span><br><span class="line">            <span class="keyword">if</span>(results.<span class="property">affectedRows</span> !== <span class="number">1</span>) <span class="keyword">return</span> res.<span class="title function_">cc</span>(<span class="string">&#x27;注册用户失败&#x27;</span>,<span class="number">1</span>)</span><br><span class="line">            res.<span class="title function_">cc</span>(<span class="string">&#x27;注册成功&#x27;</span>,<span class="number">0</span>)</span><br><span class="line">        &#125;)  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="app-js"><a href="#app-js" class="headerlink" title="app.js"></a>app.js</h3><ul><li>app.js<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> cors = <span class="built_in">require</span>(<span class="string">&#x27;cors&#x27;</span>)</span><br><span class="line">app.<span class="title function_">use</span>(express.<span class="title function_">urlencoded</span>(&#123;<span class="attr">extended</span>:<span class="literal">false</span>&#125;))</span><br><span class="line"><span class="comment">// 简化res.send(&#123;&#125;)的操作</span></span><br><span class="line">app.<span class="title function_">use</span>(<span class="function">(<span class="params">req,res,next</span>)=&gt;</span>&#123;</span><br><span class="line">    res.<span class="property">cc</span> = <span class="keyword">function</span>(<span class="params">err,status=<span class="number">1</span></span>)&#123;</span><br><span class="line">        res.<span class="title function_">send</span>(&#123;</span><br><span class="line">            status,</span><br><span class="line">            <span class="attr">msg</span>:err <span class="keyword">instanceof</span> <span class="title class_">Error</span> ? err.<span class="property">msg</span> : err</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">next</span>()</span><br><span class="line">&#125;)</span><br><span class="line">app.<span class="title function_">use</span>(<span class="title function_">cors</span>())</span><br><span class="line"><span class="comment">// 导入登录和登录的模块</span></span><br><span class="line"><span class="keyword">const</span> userRouter = <span class="built_in">require</span>(<span class="string">&#x27;./router/user&#x27;</span>)</span><br><span class="line">app.<span class="title function_">use</span>(<span class="string">&#x27;/api&#x27;</span>,userRouter)</span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">80</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;server running at http://127.0.0.1&#x27;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ul><h3 id="schema"><a href="#schema" class="headerlink" title="schema"></a>schema</h3><ul><li>user.js<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> joi = <span class="built_in">require</span>(<span class="string">&#x27;joi&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> username = joi.<span class="title function_">string</span>().<span class="title function_">alphanum</span>().<span class="title function_">min</span>(<span class="number">6</span>).<span class="title function_">max</span>(<span class="number">10</span>).required()</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> password = joi.<span class="title function_">string</span>().<span class="title function_">pattern</span>(<span class="regexp">/^[\S]&#123;6,12&#125;$/</span>).required()</span><br><span class="line"></span><br><span class="line"><span class="built_in">exports</span>.<span class="property">reg_login_schema</span> = &#123;</span><br><span class="line">    <span class="attr">body</span>:&#123;</span><br><span class="line">        username,</span><br><span class="line">        password</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;准备&quot;&gt;&lt;a href=&quot;#准备&quot; class=&quot;headerlink&quot; title=&quot;准备&quot;&gt;&lt;/a&gt;准备&lt;/h2&gt;&lt;h3 id=&quot;包准备&quot;&gt;&lt;a href=&quot;#包准备&quot; class=&quot;headerlink&quot; title=&quot;包准备&quot;&gt;&lt;/a&gt;包准备&lt;/h3&gt;&lt;u</summary>
      
    
    
    
    
    <category term="Node.js api mysql" scheme="https://www.coder-life.top/tags/Node-js-api-mysql/"/>
    
  </entry>
  
  <entry>
    <title>Node.js的大事件项目(后续补坑)</title>
    <link href="https://www.coder-life.top/2022/07/28/Node-js%E7%9A%84%E5%A4%A7%E4%BA%8B%E4%BB%B6%E9%A1%B9%E7%9B%AE-%E5%90%8E%E7%BB%AD%E8%A1%A5%E5%9D%91/"/>
    <id>https://www.coder-life.top/2022/07/28/Node-js%E7%9A%84%E5%A4%A7%E4%BA%8B%E4%BB%B6%E9%A1%B9%E7%9B%AE-%E5%90%8E%E7%BB%AD%E8%A1%A5%E5%9D%91/</id>
    <published>2022-07-28T05:28:14.000Z</published>
    <updated>2022-07-29T08:40:22.812Z</updated>
    
    <content type="html"><![CDATA[<h1 id="记录"><a href="#记录" class="headerlink" title="记录"></a>记录</h1><p>&lt;!&gt;大事件项目属于是Vue教程里的,所以选完Vue再回来继续补Node.js<br>&lt;!&gt;CSS和BOM的移动端操作还没有学,后续补坑</p><h2 id="Node-js中大事件项目的补坑-更新事件-2022-x2F-7-x2F-29-16-35"><a href="#Node-js中大事件项目的补坑-更新事件-2022-x2F-7-x2F-29-16-35" class="headerlink" title="Node.js中大事件项目的补坑(更新事件:2022&#x2F;7&#x2F;29 16:35)"></a>Node.js中大事件项目的补坑(更新事件:2022&#x2F;7&#x2F;29 16:35)</h2><h3 id="文件类别分为-router-rouer-handler-db-Schema-app-js"><a href="#文件类别分为-router-rouer-handler-db-Schema-app-js" class="headerlink" title="文件类别分为:router;rouer_handler;db;Schema;app.js"></a>文件类别分为:<em>router</em>;<em>rouer_handler</em>;<em>db</em>;<em>Schema</em>;<em>app.js</em></h3><h4 id="文件分类的解释"><a href="#文件分类的解释" class="headerlink" title="文件分类的解释"></a>文件分类的解释</h4><ul><li><p>router:我理解的意思是接口分类,以及调用其他文件夹的处理函数,比如说总端的网址是’<a href="http://127.0.0.1:80&#39;,如果我向修改密码的话,那么router会将你分配到修改密码的路由中,然后这个路由调用其他路由的函数方法进行操作">http://127.0.0.1:80&#39;,如果我向修改密码的话,那么router会将你分配到修改密码的路由中,然后这个路由调用其他路由的函数方法进行操作</a>.</p></li><li><p>router_handler:意思就是对你在router里面进行的操作进行分析,并利用里面的函数方法给你进行处理.</p><span id="more"></span></li><li><p>db:数据库的包,需要自行创建.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> mysql = <span class="built_in">require</span>(<span class="string">&#x27;mysql&#x27;</span>)</span><br><span class="line"><span class="comment">// 创建数据库连接对象</span></span><br><span class="line"><span class="keyword">const</span> db = mysql.<span class="title function_">createPool</span>(&#123;</span><br><span class="line">    <span class="attr">host</span>:<span class="string">&#x27;127.0.0.1&#x27;</span>,</span><br><span class="line">    <span class="attr">user</span>:<span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">    <span class="attr">password</span>:<span class="string">&#x27;123456&#x27;</span>,</span><br><span class="line">    <span class="attr">database</span>:<span class="string">&#x27;my_db_01&#x27;</span>,</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = db</span><br></pre></td></tr></table></figure></li><li><p>Schema:它用于指定规则的,比如你的密码多少位,包含大小写或者英文之类的,再比如你的邮箱格式是否符合<a href="mailto:&#120;&#120;&#x78;&#x40;&#x78;&#x78;&#x78;&#46;&#x63;&#111;&#109;">&#120;&#120;&#x78;&#x40;&#x78;&#x78;&#x78;&#46;&#x63;&#111;&#109;</a>,必需包是<em>joi</em></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 导入包</span></span><br><span class="line"><span class="keyword">const</span> joi = <span class="built_in">require</span>(<span class="string">&#x27;joi&#x27;</span>)</span><br></pre></td></tr></table></figure></li><li><p>app.js:它属于是一个总端吧,如果你进行修改密码的操作,那么它会将你分配到修改密码的路由中去操作.</p></li></ul>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;记录&quot;&gt;&lt;a href=&quot;#记录&quot; class=&quot;headerlink&quot; title=&quot;记录&quot;&gt;&lt;/a&gt;记录&lt;/h1&gt;&lt;p&gt;&amp;lt;!&amp;gt;大事件项目属于是Vue教程里的,所以选完Vue再回来继续补Node.js&lt;br&gt;&amp;lt;!&amp;gt;CSS和BOM的移动端操作还没有学,后续补坑&lt;/p&gt;
&lt;h2 id=&quot;Node-js中大事件项目的补坑-更新事件-2022-x2F-7-x2F-29-16-35&quot;&gt;&lt;a href=&quot;#Node-js中大事件项目的补坑-更新事件-2022-x2F-7-x2F-29-16-35&quot; class=&quot;headerlink&quot; title=&quot;Node.js中大事件项目的补坑(更新事件:2022&amp;#x2F;7&amp;#x2F;29 16:35)&quot;&gt;&lt;/a&gt;Node.js中大事件项目的补坑(更新事件:2022&amp;#x2F;7&amp;#x2F;29 16:35)&lt;/h2&gt;&lt;h3 id=&quot;文件类别分为-router-rouer-handler-db-Schema-app-js&quot;&gt;&lt;a href=&quot;#文件类别分为-router-rouer-handler-db-Schema-app-js&quot; class=&quot;headerlink&quot; title=&quot;文件类别分为:router;rouer_handler;db;Schema;app.js&quot;&gt;&lt;/a&gt;文件类别分为:&lt;em&gt;router&lt;/em&gt;;&lt;em&gt;rouer_handler&lt;/em&gt;;&lt;em&gt;db&lt;/em&gt;;&lt;em&gt;Schema&lt;/em&gt;;&lt;em&gt;app.js&lt;/em&gt;&lt;/h3&gt;&lt;h4 id=&quot;文件分类的解释&quot;&gt;&lt;a href=&quot;#文件分类的解释&quot; class=&quot;headerlink&quot; title=&quot;文件分类的解释&quot;&gt;&lt;/a&gt;文件分类的解释&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;router:我理解的意思是接口分类,以及调用其他文件夹的处理函数,比如说总端的网址是’&lt;a href=&quot;http://127.0.0.1:80&amp;#39;,如果我向修改密码的话,那么router会将你分配到修改密码的路由中,然后这个路由调用其他路由的函数方法进行操作&quot;&gt;http://127.0.0.1:80&amp;#39;,如果我向修改密码的话,那么router会将你分配到修改密码的路由中,然后这个路由调用其他路由的函数方法进行操作&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;router_handler:意思就是对你在router里面进行的操作进行分析,并利用里面的函数方法给你进行处理.&lt;/p&gt;</summary>
    
    
    
    
    <category term="Node.js" scheme="https://www.coder-life.top/tags/Node-js/"/>
    
  </entry>
  
  <entry>
    <title>Node中运用Mysql语句进行增改删查</title>
    <link href="https://www.coder-life.top/2022/07/26/Node%E4%B8%AD%E8%BF%90%E7%94%A8Mysql%E8%AF%AD%E5%8F%A5%E8%BF%9B%E8%A1%8C%E5%A2%9E%E6%94%B9%E5%88%A0%E6%9F%A5/"/>
    <id>https://www.coder-life.top/2022/07/26/Node%E4%B8%AD%E8%BF%90%E7%94%A8Mysql%E8%AF%AD%E5%8F%A5%E8%BF%9B%E8%A1%8C%E5%A2%9E%E6%94%B9%E5%88%A0%E6%9F%A5/</id>
    <published>2022-07-26T09:24:04.000Z</published>
    <updated>2022-07-26T09:27:44.561Z</updated>
    
    <content type="html"><![CDATA[<h2 id="导入Mysql模块"><a href="#导入Mysql模块" class="headerlink" title="导入Mysql模块"></a>导入Mysql模块</h2><p>首先安装mysql模块</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">$</span> <span class="string">npm</span> <span class="string">i</span> <span class="string">mysql</span></span><br></pre></td></tr></table></figure><p>然后导入mysql模块</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 导入mysql模块</span></span><br><span class="line"><span class="keyword">const</span> mysql = <span class="built_in">require</span>(<span class="string">&#x27;mysql&#x27;</span>)</span><br><span class="line"><span class="comment">// 建立与mysql数据库的连接</span></span><br><span class="line"><span class="keyword">const</span> db = mysql.<span class="title function_">createPool</span>(&#123;</span><br><span class="line">    <span class="comment">// 数据库的IP地址</span></span><br><span class="line">    <span class="attr">host</span>:<span class="string">&#x27;127.0.0.1&#x27;</span>,</span><br><span class="line">    <span class="comment">// 登录数据库的账号</span></span><br><span class="line">    <span class="attr">user</span>:<span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">    <span class="comment">// 登录数据库的密码</span></span><br><span class="line">    <span class="attr">password</span>:<span class="string">&#x27;123456&#x27;</span>,</span><br><span class="line">    <span class="comment">// 指定要操作哪一个数据库</span></span><br><span class="line">    <span class="attr">database</span>:<span class="string">&#x27;my_db_01&#x27;</span>,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="对数据进行四大项操作"><a href="#对数据进行四大项操作" class="headerlink" title="对数据进行四大项操作"></a>对数据进行四大项操作</h2><p>1.查询数据</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> sql = <span class="string">&#x27;select * from users&#x27;</span></span><br><span class="line">db.<span class="title function_">query</span>(sql,<span class="function">(<span class="params">err,results</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">// err</span></span><br><span class="line">    <span class="keyword">if</span>(err)&#123;<span class="keyword">return</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;出现问题---&gt;&#x27;</span>+err.<span class="property">message</span>)&#125;</span><br><span class="line">    <span class="comment">// 成功</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;------查询成功------\n&quot;</span>+results+<span class="string">&quot;\n-------查询结束------&quot;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>2.插入数据</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> user = &#123;<span class="attr">username</span>:<span class="string">&#x27;Spider-man&#x27;</span>,<span class="attr">password</span>:<span class="string">&#x27;123456&#x27;</span>&#125;</span><br><span class="line"><span class="comment">// 如果数据过多 sqlStr = &#x27;insert into users (username,password) set ?&#x27;</span></span><br><span class="line"><span class="keyword">const</span> sqlStr = <span class="string">&#x27;insert into users (username,password) values(?,?)&#x27;</span></span><br><span class="line"><span class="comment">// db.query(sqlStr,user,(err,results)</span></span><br><span class="line">db.<span class="title function_">query</span>(sqlStr,[user.<span class="property">username</span>,user.<span class="property">password</span>],<span class="function">(<span class="params">err,results</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(err)&#123;<span class="keyword">return</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;出现问题---&gt;&#x27;</span>+err.<span class="property">message</span>)&#125;</span><br><span class="line">    <span class="comment">// 利用affectedRows来判断是否插入数据成功</span></span><br><span class="line">    <span class="keyword">if</span>(results.<span class="property">affectedRows</span> === <span class="number">1</span>)&#123;<span class="keyword">return</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;------插入成功------\n&#x27;</span>+results+<span class="string">&#x27;\n-------插入结束-------&#x27;</span>)&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>3.更新数据</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 更新数据</span></span><br><span class="line"><span class="keyword">const</span> user = &#123;<span class="attr">id</span>:<span class="number">1</span>,<span class="attr">username</span>:<span class="string">&#x27;aaa&#x27;</span>,<span class="attr">password</span>:<span class="string">&#x27;000&#x27;</span>&#125;</span><br><span class="line"><span class="comment">// 简便方式:</span></span><br><span class="line"><span class="comment">// const sqlStr = &#x27;update users set ? where id=?&#x27;</span></span><br><span class="line"><span class="keyword">const</span> sqlStr = <span class="string">&#x27;update users set username=?,password=? where id=?&#x27;</span></span><br><span class="line"><span class="comment">// db.query(sqlStr,user,(err,results)=&gt;&#123;&#125;)</span></span><br><span class="line">db.<span class="title function_">query</span>(sqlStr,[user.<span class="property">username</span>,user.<span class="property">password</span>,user.<span class="property">id</span>],<span class="function">(<span class="params">err,results</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(err)&#123;<span class="keyword">return</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;出现问题---&gt;\n&#x27;</span>+err.<span class="property">message</span>)&#125;</span><br><span class="line">    <span class="keyword">if</span>(results.<span class="property">affectedRows</span> === <span class="number">1</span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;更新成功&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>4.删除数据</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 删除数据</span></span><br><span class="line"><span class="keyword">const</span> sqlStrOne = <span class="string">&#x27;delete from users where id=?&#x27;</span></span><br><span class="line">db.<span class="title function_">query</span>(sqlStrOne,<span class="number">1</span>,<span class="function">(<span class="params">err,results</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(err)&#123;<span class="keyword">return</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;出现问题---&gt;\n&#x27;</span>+err.<span class="property">message</span>)&#125;</span><br><span class="line">    <span class="keyword">if</span>(results.<span class="property">affectedRows</span> === <span class="number">1</span>)&#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;删除成功&#x27;</span>)</span><br><span class="line">            &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 标记删除</span></span><br><span class="line"><span class="keyword">const</span> sqlStrTwo = <span class="string">&#x27;update users set status=1 where id=?&#x27;</span></span><br><span class="line">db.<span class="title function_">query</span>(sqlStrTwo,<span class="number">3</span>,<span class="function">(<span class="params">err,results</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(err)&#123;<span class="keyword">return</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;出现问题---&gt;\n&#x27;</span>+err.<span class="property">message</span>)&#125;</span><br><span class="line">    <span class="keyword">if</span>(results.<span class="property">affectedRows</span> === <span class="number">1</span>)&#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;标记删除成功&#x27;</span>)</span><br><span class="line">            &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;导入Mysql模块&quot;&gt;&lt;a href=&quot;#导入Mysql模块&quot; class=&quot;headerlink&quot; title=&quot;导入Mysql模块&quot;&gt;&lt;/a&gt;导入Mysql模块&lt;/h2&gt;&lt;p&gt;首先安装mysql模块&lt;/p&gt;
&lt;figure class=&quot;highlight y</summary>
      
    
    
    
    <category term="Node.js" scheme="https://www.coder-life.top/categories/Node-js/"/>
    
    
    <category term="Node.js" scheme="https://www.coder-life.top/tags/Node-js/"/>
    
  </entry>
  
  <entry>
    <title>web开发模式</title>
    <link href="https://www.coder-life.top/2022/07/26/%E5%89%8D%E5%90%8E%E7%AB%AF%E8%BA%AB%E4%BB%BD%E8%AE%A4%E8%AF%81/"/>
    <id>https://www.coder-life.top/2022/07/26/%E5%89%8D%E5%90%8E%E7%AB%AF%E8%BA%AB%E4%BB%BD%E8%AE%A4%E8%AF%81/</id>
    <published>2022-07-26T08:00:00.000Z</published>
    <updated>2022-07-27T16:56:13.755Z</updated>
    
    <content type="html"><![CDATA[<h2 id="服务器端渲染"><a href="#服务器端渲染" class="headerlink" title="服务器端渲染"></a>服务器端渲染</h2><p>概念:服务器发送给客户端的HTML页面,是在服务器通过字符串的拼接,动态生成的,所以不需要Ajax来进行额外请求</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h2 id="前后端分离的开发模式"><a href="#前后端分离的开发模式" class="headerlink" title="前后端分离的开发模式"></a>前后端分离的开发模式</h2><p>概念:依赖于Ajax技术,后端负责提供API接口,前端使用Ajax调用接口的开发模式<br>优点:1.开发体验好,前端专注于UI,后端专注于API;<br>    2.用户体验好;<br>    3.减轻了服务器端的压力.<br>缺点:1.不利于SEO(搜索引擎优化).</p><h2 id="如何选择何种开发模式"><a href="#如何选择何种开发模式" class="headerlink" title="如何选择何种开发模式"></a>如何选择何种开发模式</h2><p>1.功能主要是展示,没有复杂的交互,并且需要良好的SEO,就用服务器端渲染</p><p>2.类似于后台管理项目,交互性比较强,不需要考虑SEO,就用前后端分离的开发模式</p><p>3.混合开发:首屏服务器端渲染(兼顾首屏的渲染速度),分页是前后端分离的开发模式</p><h2 id="身份认证"><a href="#身份认证" class="headerlink" title="身份认证"></a>身份认证</h2><p>对于服务器端渲染—–推荐使用!&lt;Session认证机制&gt;</p><p>对于前后端分离—–推荐使用!&lt;JWT认证机制&gt;</p><h2 id="Seesion"><a href="#Seesion" class="headerlink" title="Seesion"></a>Seesion</h2><p>1.HTTP协议的无状态性</p><pre><code>指的是:客户端的每次HTTP请求都是独立的,连续多个请求之间没有直接的关系,服务器不会主动保留每次HTTP请求的状态</code></pre><p>2.Cookie(键值对)</p><pre><code>指的是:存储在用户浏览器中的一段不超过4KB的字符串特性:1.自动发送;    2.域名独立;    3.过期时限;    4.4KB限制;&lt;!&gt;Cookie很容易被伪造,不具有安全性</code></pre><p>3.Session认证机制</p><pre><code>设计理念类似于:会员卡＋刷卡认证</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;服务器端渲染&quot;&gt;&lt;a href=&quot;#服务器端渲染&quot; class=&quot;headerlink&quot; title=&quot;服务器端渲染&quot;&gt;&lt;/a&gt;服务器端渲染&lt;/h2&gt;&lt;p&gt;概念:服务器发送给客户端的HTML页面,是在服务器通过字符串的拼接,动态生成的,所以不需要Ajax来进行额外</summary>
      
    
    
    
    
    <category term="Node.js" scheme="https://www.coder-life.top/tags/Node-js/"/>
    
  </entry>
  
  <entry>
    <title>SQL语句使用</title>
    <link href="https://www.coder-life.top/2022/07/26/sql%E8%AF%AD%E5%8F%A5%E4%BD%BF%E7%94%A8/"/>
    <id>https://www.coder-life.top/2022/07/26/sql%E8%AF%AD%E5%8F%A5%E4%BD%BF%E7%94%A8/</id>
    <published>2022-07-26T08:00:00.000Z</published>
    <updated>2022-07-26T08:39:38.255Z</updated>
    
    <content type="html"><![CDATA[<h2 id="SQL的Select语句"><a href="#SQL的Select语句" class="headerlink" title="SQL的Select语句"></a>SQL的Select语句</h2><p>&lt;!&gt;大小写不敏感</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 从from指定的[表中],查询出所有数据, * 表示所有列</span></span><br><span class="line"><span class="string">SELECT</span> <span class="string">*</span> <span class="string">FROM</span> <span class="string">表名称</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 从from指定的[表中],查询出指定的 列名称 的数据</span></span><br><span class="line"><span class="string">SELECT</span> <span class="string">列名称</span> <span class="string">FROM</span> <span class="string">表名称</span></span><br></pre></td></tr></table></figure><h2 id="SQL的INSERT-INTO-语句"><a href="#SQL的INSERT-INTO-语句" class="headerlink" title="SQL的INSERT INTO 语句"></a>SQL的INSERT INTO 语句</h2><p>&lt;!&gt;向数据表中插入新的数据行</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">INSERT</span> <span class="string">INTO</span> <span class="string">table_name(列1,列2......)</span> <span class="string">values</span> <span class="string">(值1,值2......)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 例子:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1.修改单个数据</span></span><br><span class="line"><span class="string">INSERT</span> <span class="string">INTO</span> <span class="string">users</span> <span class="string">(username,password)</span> <span class="string">values</span> <span class="string">(&#x27;Toy&#x27;,&#x27;246810&#x27;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.修改多个数据</span></span><br><span class="line"><span class="string">update</span> <span class="string">users</span> <span class="string">set</span> <span class="string">password</span> <span class="string">=</span> <span class="string">&#x27;123456&#x27;</span><span class="string">,status</span> <span class="string">=</span> <span class="string">&#x27;1&#x27;</span> <span class="string">where</span> <span class="string">username</span> <span class="string">=</span> <span class="string">&#x27;ls&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="SQL的UPDATE语句"><a href="#SQL的UPDATE语句" class="headerlink" title="SQL的UPDATE语句"></a>SQL的UPDATE语句</h2><p>&lt;!&gt;修改表中的数据</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">UPDATE</span> <span class="string">表名称</span> <span class="string">SET</span> <span class="string">列名称</span> <span class="string">=</span> <span class="string">新值</span> <span class="string">WHERE</span> <span class="string">列名称</span> <span class="string">=</span> <span class="string">某值</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 例子:</span></span><br><span class="line"></span><br><span class="line"><span class="string">update</span> <span class="string">users</span> <span class="string">set</span> <span class="string">password</span> <span class="string">=</span> <span class="string">&#x27;123456&#x27;</span> <span class="string">where</span> <span class="string">username</span> <span class="string">=</span> <span class="string">&#x27;ls&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="SQL的DELETE语句"><a href="#SQL的DELETE语句" class="headerlink" title="SQL的DELETE语句"></a>SQL的DELETE语句</h2><p>&lt;!&gt;删除表中的数据</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">DELETE</span> <span class="string">FROM</span> <span class="string">表名称</span> <span class="string">WHERE</span> <span class="string">列名称</span> <span class="string">=</span> <span class="string">值</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 例子:</span></span><br><span class="line"><span class="string">DELETE</span> <span class="string">FROM</span> <span class="string">users</span> <span class="string">WHERE</span> <span class="string">id</span> <span class="string">=</span> <span class="string">&#x27;4&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="SQL的ORDERBY语句"><a href="#SQL的ORDERBY语句" class="headerlink" title="SQL的ORDERBY语句"></a>SQL的ORDERBY语句</h2><p>&lt;!&gt;排序<br>DESC:降序排序<br>默认:升序排序(ASC)</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">.单个排序</span></span><br><span class="line"><span class="comment"># 升序</span></span><br><span class="line"><span class="string">Select</span> <span class="string">*</span> <span class="string">from</span> <span class="string">users</span> <span class="string">ORDER</span> <span class="string">BY</span> <span class="string">status</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 降序</span></span><br><span class="line"><span class="string">Select</span> <span class="string">*</span> <span class="string">from</span> <span class="string">users</span> <span class="string">ORDER</span> <span class="string">BY</span> <span class="string">status</span> <span class="string">DESC</span></span><br><span class="line"></span><br><span class="line"><span class="number">2</span><span class="string">.多重排序</span></span><br><span class="line"><span class="string">Select</span> <span class="string">*</span> <span class="string">from</span> <span class="string">users</span> <span class="string">ORDER</span> <span class="string">BY</span> <span class="string">status</span> <span class="string">desc,</span> <span class="string">username</span> <span class="string">asc</span></span><br></pre></td></tr></table></figure><h2 id="SQL的COUNT-函数"><a href="#SQL的COUNT-函数" class="headerlink" title="SQL的COUNT(*)函数"></a>SQL的COUNT(*)函数</h2><p>&lt;!&gt;查询数量</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">select</span> <span class="string">count(*)</span> <span class="string">from</span> <span class="string">users</span> <span class="string">where</span> <span class="string">status</span> <span class="string">=</span> <span class="string">&#x27;0&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="string">AS:给列起别名</span></span><br><span class="line"><span class="string">select</span> <span class="string">count(*)</span> <span class="string">AS</span> <span class="string">total</span> <span class="string">from</span> <span class="string">users</span> <span class="string">where</span> <span class="string">status</span> <span class="string">=</span> <span class="string">&#x27;0&#x27;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;SQL的Select语句&quot;&gt;&lt;a href=&quot;#SQL的Select语句&quot; class=&quot;headerlink&quot; title=&quot;SQL的Select语句&quot;&gt;&lt;/a&gt;SQL的Select语句&lt;/h2&gt;&lt;p&gt;&amp;lt;!&amp;gt;大小写不敏感&lt;/p&gt;
&lt;figure cl</summary>
      
    
    
    
    
    <category term="Mysql" scheme="https://www.coder-life.top/tags/Mysql/"/>
    
  </entry>
  
  <entry>
    <title>Express路由</title>
    <link href="https://www.coder-life.top/2022/07/25/Express%E8%B7%AF%E7%94%B1/"/>
    <id>https://www.coder-life.top/2022/07/25/Express%E8%B7%AF%E7%94%B1/</id>
    <published>2022-07-25T04:24:00.000Z</published>
    <updated>2022-07-25T08:21:58.468Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>在Express中,路由指的是客户端的请求与服务器处理函数之间的映射关系.<br>Express的路由分为三个部分:请求的类型,请求的URL地址,处理函数<br>格式如下:</p><h2 id="路由匹配的注意点"><a href="#路由匹配的注意点" class="headerlink" title="路由匹配的注意点"></a>路由匹配的注意点</h2><p>1.按照定义的先后顺序进行匹配<br>2.请求类型和请求的URL同时匹配成功,才会调用对应的处理函数</p><h2 id="挂在路由的方式"><a href="#挂在路由的方式" class="headerlink" title="挂在路由的方式"></a>挂在路由的方式</h2><p>1.直接挂在到app上</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 挂载路由</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    res.<span class="title function_">send</span>(<span class="string">&#x27;hello world&#x27;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&#x27;/&#x27;</span>,<span class="function">(<span class="params">res,req</span>)=&gt;</span>&#123;</span><br><span class="line">    res.<span class="title function_">send</span>(<span class="string">&#x27;post Request.&#x27;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">80</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;http://127.0.0.1&#x27;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>2.将路由抽离为单独的模块进行挂载<br>2.1步骤:<br>(1).创建路由模块对应的js文件<br>(2).调用express.Router()函数创建路由对象<br>(3).向路由对象上挂载具体的路由<br>(4).使用module.exports向外共享路由对象<br>(5).向app.use()函数注册路由模块</p><p>路由模块化.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>)</span><br><span class="line"><span class="keyword">let</span> app = <span class="title function_">express</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 导入路由模块</span></span><br><span class="line"><span class="keyword">let</span> router = <span class="built_in">require</span>(<span class="string">&#x27;./router&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 注册路由模块</span></span><br><span class="line"><span class="comment">// 作用:注册全局中间件</span></span><br><span class="line"><span class="comment">// 挂载前缀</span></span><br><span class="line">app.<span class="title function_">use</span>(<span class="string">&#x27;/api&#x27;</span>,router)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">80</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;http://127.0.0.1&#x27;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>router.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 路由模块</span></span><br><span class="line"><span class="keyword">let</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> router = express.<span class="title class_">Router</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 挂载路由</span></span><br><span class="line"></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&#x27;/user/list&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    res.<span class="title function_">send</span>(<span class="string">&#x27;Get User List.&#x27;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">router.<span class="title function_">post</span>(<span class="string">&#x27;/user/add&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    res.<span class="title function_">send</span>(<span class="string">&#x27;Add new User&#x27;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 向外导出路由对象</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = router</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="中间件"><a href="#中间件" class="headerlink" title="中间件"></a>中间件</h2><p>概念:业务中,中间处理的环节<br>格式:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>)</span><br><span class="line"><span class="keyword">let</span> app = <span class="title function_">express</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义中间件函数</span></span><br><span class="line"><span class="keyword">const</span> mw = <span class="keyword">function</span>(<span class="params">req,res,next</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;这是一个简单的中间件函数&#x27;</span>)</span><br><span class="line">    <span class="comment">// 把流转关系转交给下一个中间件或路由</span></span><br><span class="line">    <span class="title function_">next</span>()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 全局生效的中间件</span></span><br><span class="line">app.<span class="title function_">use</span>(mw)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    res.<span class="title function_">send</span>(<span class="string">&#x27;Home Page.&#x27;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/user&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    res.<span class="title function_">send</span>(<span class="string">&#x27;User Page.&#x27;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">80</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;http://127.0.0.1&#x27;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>中间件函数的简化形式:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// // 定义中间件函数</span></span><br><span class="line"><span class="comment">// const mw = function(req,res,next)&#123;</span></span><br><span class="line"><span class="comment">//     console.log(&#x27;这是一个简单的中间件函数&#x27;)</span></span><br><span class="line"><span class="comment">//     // 把流转关系转交给下一个中间件或路由</span></span><br><span class="line"><span class="comment">//     next()</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// // 全局生效的中间件</span></span><br><span class="line"><span class="comment">// app.use(mw)</span></span><br><span class="line">app.<span class="title function_">use</span>(<span class="function">(<span class="params">res,req,next</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;这是简单的中间件函数&#x27;</span>)</span><br><span class="line">    <span class="title function_">next</span>()</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="中间件的作用"><a href="#中间件的作用" class="headerlink" title="中间件的作用"></a>中间件的作用</h2><p>1.多个中间件之间可以用共享同一份req,res:统一为req或res对象添加自定义的属性或方法<br>例子:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>)</span><br><span class="line"><span class="keyword">let</span> app = <span class="title function_">express</span>()</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(<span class="function">(<span class="params">res,req,next</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">// 获取请求到达服务器的时间</span></span><br><span class="line">    <span class="keyword">const</span> time = <span class="title class_">Date</span>.<span class="title function_">now</span>()</span><br><span class="line">    <span class="comment">// 为req挂载自定义属性,从而把time共享给后面的路由</span></span><br><span class="line">    req.<span class="property">startTime</span> = time</span><br><span class="line">    <span class="title function_">next</span>()</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    res.<span class="title function_">send</span>(<span class="string">&#x27;Home Page.&#x27;</span>+ req.<span class="property">startTime</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/user&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    res.<span class="title function_">send</span>(<span class="string">&#x27;User Page.&#x27;</span>+req.<span class="property">startTime</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">80</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;http://127.0.0.1&#x27;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="局部生效的中间件"><a href="#局部生效的中间件" class="headerlink" title="局部生效的中间件"></a>局部生效的中间件</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义中间件函数</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">mw1</span> = (<span class="params">req,res,next</span>)=&gt;&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;调用了局部生效的中间件&#x27;</span>)</span><br><span class="line">    <span class="title function_">next</span>()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>,mw1,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    res.<span class="title function_">send</span>(<span class="string">&#x27;Home page.&#x27;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/user&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    res.<span class="title function_">send</span>(<span class="string">&#x27;User page.&#x27;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">80</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;http://127.0.0.1&#x27;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="同时使用多个局部中间件"><a href="#同时使用多个局部中间件" class="headerlink" title="同时使用多个局部中间件"></a>同时使用多个局部中间件</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义中间件函数</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">mw1</span> = (<span class="params">req,res,next</span>)=&gt;&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;调用了第一个局部生效的中间件&#x27;</span>)</span><br><span class="line">    <span class="title function_">next</span>()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">mw2</span> = (<span class="params">req,res,next</span>)=&gt;&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;调用了第二个局部生效的中间件&#x27;</span>)</span><br><span class="line">    <span class="title function_">next</span>()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>,mw1,mw2,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    res.<span class="title function_">send</span>(<span class="string">&#x27;Home page.&#x27;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/user&#x27;</span>,[mw1,mw2],<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    res.<span class="title function_">send</span>(<span class="string">&#x27;User page.&#x27;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">80</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;http://127.0.0.1&#x27;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="中间件的分类"><a href="#中间件的分类" class="headerlink" title="中间件的分类"></a>中间件的分类</h2><p>1.应用级别:绑定到app实例上的中间件<br>    app.use();app.get()&#x2F;app.post()</p><p>2.路由级别:绑定到Router上的中间<br>    express.Router()</p><p>3.错误级别:必须注册在所有路由之后<br>    处理函数 function(err,req,res,next){}</p><p>4.Express内置的中间件:<br>    (1)express.static:快速托管静态资源<br>    (2)express.json:解析json格式的请求体数据</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 除了错误级别的中间件,其他中间件,必须在路由之前进行配置</span></span><br><span class="line">app.<span class="title function_">use</span>(express.<span class="title function_">json</span>())</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&#x27;/user&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">// 在服务器中,可以使用req.body可以收到客户端发来的请求体数据</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(req.<span class="property">body</span>)</span><br><span class="line">    res.<span class="title function_">send</span>(<span class="string">&#x27;ok&#x27;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">80</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;http://127.0.0.1&#x27;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><pre><code>(3)express.urlencoded:解析URL-encoded格式的请求体数据</code></pre><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 除了错误级别的中间件,其他中间件,必须在路由之前进行配置</span></span><br><span class="line"><span class="comment">// 解析表达那中url-encoded格式的数据</span></span><br><span class="line">app.<span class="title function_">use</span>(express.<span class="title function_">urlencoded</span>())</span><br><span class="line">    <span class="comment">// 在服务器中,可以使用req.body可以收到客户端发来的请求体数据</span></span><br><span class="line"></span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&#x27;/book&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(req.<span class="property">body</span>)</span><br><span class="line">    res.<span class="title function_">send</span>(<span class="string">&#x27;ok&#x27;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">80</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;http://127.0.0.1&#x27;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>4.第三方中间件:<br>    a.安装<br> <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">npm</span> <span class="string">install</span> <span class="string">&lt;body-parser&gt;</span></span><br></pre></td></tr></table></figure></p><pre><code>b.使用require()导入中间件</code></pre><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &lt;body-parser&gt; = <span class="built_in">require</span>(<span class="string">&#x27;&lt;body-parser&gt;&#x27;</span>)</span><br></pre></td></tr></table></figure><pre><code>c.调用app.use()注册并使用中间件</code></pre><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">use</span>(&lt;body-parser&gt;)</span><br></pre></td></tr></table></figure><p> 5.自定义中间件:<br> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>)</span><br><span class="line"><span class="comment">// 作用:解析请求体</span></span><br><span class="line"><span class="keyword">const</span> qs = <span class="built_in">require</span>(<span class="string">&#x27;querystring&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>()</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(<span class="function">(<span class="params">req,res,next</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">// 定义变量</span></span><br><span class="line">    <span class="keyword">let</span> str = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="comment">// 监听req的data事件</span></span><br><span class="line">    req.<span class="title function_">on</span>(<span class="string">&#x27;data&#x27;</span>,<span class="function">(<span class="params">chunk</span>)=&gt;</span>&#123;</span><br><span class="line">        str += chunk</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="comment">// 监听req的end事件</span></span><br><span class="line">    req.<span class="title function_">on</span>(<span class="string">&#x27;end&#x27;</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">        <span class="comment">// 在str中存放的是完整的请求体数据</span></span><br><span class="line">        <span class="keyword">const</span> body = qs.<span class="title function_">parse</span>(str)</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(body)</span><br><span class="line">        req.<span class="property">body</span> = body</span><br><span class="line">        <span class="title function_">next</span>()</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&#x27;/user&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    res.<span class="title function_">send</span>(req.<span class="property">body</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">80</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;http://127.0.0.1&#x27;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;概念&quot;&gt;&lt;a href=&quot;#概念&quot; class=&quot;headerlink&quot; title=&quot;概念&quot;&gt;&lt;/a&gt;概念&lt;/h2&gt;&lt;p&gt;在Express中,路由指的是客户端的请求与服务器处理函数之间的映射关系.&lt;br&gt;Express的路由分为三个部分:请求的类型,请求的URL</summary>
      
    
    
    
    <category term="Node.js" scheme="https://www.coder-life.top/categories/Node-js/"/>
    
    
    <category term="Node.js" scheme="https://www.coder-life.top/tags/Node-js/"/>
    
  </entry>
  
  <entry>
    <title>渐变轮播图的实现</title>
    <link href="https://www.coder-life.top/2022/07/24/%E6%B8%90%E5%8F%98%E8%BD%AE%E6%92%AD%E5%9B%BE%E7%9A%84%E5%AE%9E%E7%8E%B0/"/>
    <id>https://www.coder-life.top/2022/07/24/%E6%B8%90%E5%8F%98%E8%BD%AE%E6%92%AD%E5%9B%BE%E7%9A%84%E5%AE%9E%E7%8E%B0/</id>
    <published>2022-07-24T09:22:18.000Z</published>
    <updated>2022-07-24T09:27:14.930Z</updated>
    
    <content type="html"><![CDATA[<h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><pre><code>需要提前在img数组中,把除去第一个图片中的opacity调整为0,加上transation:all time;用前需要定义变量,获取html元素direction:方向----left或者rightgroup:图片数组</code></pre><h2 id="函数封装"><a href="#函数封装" class="headerlink" title="函数封装"></a>函数封装</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">opacityRightChange</span>(<span class="params">direction,group</span>)&#123;</span><br><span class="line">direction.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(flag&gt;=<span class="number">0</span>&amp;&amp;flag&lt;group.<span class="property">length</span>-<span class="number">1</span>)&#123;</span><br><span class="line">group[flag].<span class="property">style</span>.<span class="property">opacity</span> = <span class="string">&#x27;0&#x27;</span></span><br><span class="line">flag++</span><br><span class="line">group[flag].<span class="property">style</span>.<span class="property">opacity</span> = <span class="string">&#x27;1&#x27;</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(flag &gt;=group.<span class="property">length</span>-<span class="number">1</span>)&#123;</span><br><span class="line">group[flag].<span class="property">style</span>.<span class="property">opacity</span> = <span class="string">&#x27;0&#x27;</span></span><br><span class="line">flag = <span class="number">0</span></span><br><span class="line">group[flag].<span class="property">style</span>.<span class="property">opacity</span> = <span class="string">&#x27;1&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">opacityLeftChange</span>(<span class="params">direction,group</span>)&#123;</span><br><span class="line">direction.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(flag &lt;=imglist.<span class="property">length</span>-<span class="number">1</span>&amp;&amp;flag &gt;<span class="number">0</span>)&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">11</span>)</span><br><span class="line">group[flag].<span class="property">style</span>.<span class="property">opacity</span> = <span class="string">&#x27;0&#x27;</span></span><br><span class="line">flag--</span><br><span class="line">group[flag].<span class="property">style</span>.<span class="property">opacity</span> = <span class="string">&#x27;1&#x27;</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(flag &lt;=<span class="number">0</span>)&#123;</span><br><span class="line">group[flag].<span class="property">style</span>.<span class="property">opacity</span> = <span class="string">&#x27;0&#x27;</span></span><br><span class="line">flag = imglist.<span class="property">length</span>-<span class="number">1</span></span><br><span class="line">group[flag].<span class="property">style</span>.<span class="property">opacity</span> = <span class="string">&#x27;1&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="函数的使用"><a href="#函数的使用" class="headerlink" title="函数的使用"></a>函数的使用</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">   <span class="title function_">opacityRightChange</span>(right,imglist)</span><br><span class="line"><span class="title function_">opacityLeftChange</span>(left,imglist)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;注意事项&quot;&gt;&lt;a href=&quot;#注意事项&quot; class=&quot;headerlink&quot; title=&quot;注意事项&quot;&gt;&lt;/a&gt;注意事项&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;需要提前在img数组中,把除去第一个图片中的opacity调整为0,加上transation:all tim</summary>
      
    
    
    
    <category term="JavaScript" scheme="https://www.coder-life.top/categories/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="https://www.coder-life.top/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript函数封装--上下缓动动画(只支持(滚动动画过渡,不适合左右位移))</title>
    <link href="https://www.coder-life.top/2022/07/24/JavaScript%E5%87%BD%E6%95%B0%E5%B0%81%E8%A3%85-%E4%B8%8A%E4%B8%8B%E7%BC%93%E5%8A%A8%E5%8A%A8%E7%94%BB-%E5%8F%AA%E6%94%AF%E6%8C%81-%E6%BB%9A%E5%8A%A8%E5%8A%A8%E7%94%BB%E8%BF%87%E6%B8%A1-%E4%B8%8D%E9%80%82%E5%90%88%E5%B7%A6%E5%8F%B3%E4%BD%8D%E7%A7%BB/"/>
    <id>https://www.coder-life.top/2022/07/24/JavaScript%E5%87%BD%E6%95%B0%E5%B0%81%E8%A3%85-%E4%B8%8A%E4%B8%8B%E7%BC%93%E5%8A%A8%E5%8A%A8%E7%94%BB-%E5%8F%AA%E6%94%AF%E6%8C%81-%E6%BB%9A%E5%8A%A8%E5%8A%A8%E7%94%BB%E8%BF%87%E6%B8%A1-%E4%B8%8D%E9%80%82%E5%90%88%E5%B7%A6%E5%8F%B3%E4%BD%8D%E7%A7%BB/</id>
    <published>2022-07-24T09:07:43.000Z</published>
    <updated>2022-07-24T09:17:10.133Z</updated>
    
    <content type="html"><![CDATA[<h2 id="函数封装"><a href="#函数封装" class="headerlink" title="函数封装"></a>函数封装</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// obj:盒子对象</span></span><br><span class="line"><span class="comment">// target:目标位置</span></span><br><span class="line"><span class="comment">// time:运动时间</span></span><br><span class="line"><span class="comment">// callback:回调函数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">move</span>(<span class="params">obj,target,time,callback</span>)&#123;</span><br><span class="line"><span class="comment">// 清除定时器,防止多次点击加快移动速度和创建新的定时器</span></span><br><span class="line"><span class="built_in">clearInterval</span>(obj.<span class="property">timer</span>)</span><br><span class="line"><span class="comment">// 结束</span></span><br><span class="line">obj.<span class="property">timer</span> = <span class="built_in">setInterval</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="comment">// 缓动动画原理</span></span><br><span class="line"><span class="comment">// (目标位置-现在位置)/10</span></span><br><span class="line"><span class="keyword">var</span> step = (target - <span class="variable language_">window</span>.<span class="property">pageYOffset</span>) / <span class="number">10</span>;</span><br><span class="line">step  = step &gt; <span class="number">0</span> ?<span class="title class_">Math</span>.<span class="title function_">ceil</span>(step) : <span class="title class_">Math</span>.<span class="title function_">floor</span>(step)</span><br><span class="line"><span class="comment">// 步行算法结束</span></span><br><span class="line"><span class="keyword">if</span>(<span class="variable language_">window</span>.<span class="property">pageYOffset</span> == target)&#123;</span><br><span class="line"><span class="built_in">clearInterval</span>(obj.<span class="property">timer</span>)</span><br><span class="line"><span class="comment">// 回调函数,如果有就执行,如果没有就不执行</span></span><br><span class="line"><span class="keyword">if</span>(callback)&#123;</span><br><span class="line"><span class="title function_">callback</span>()</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 回调函数结束</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// obj.style.left = window.pageYOffset + step +&#x27;px&#x27;</span></span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">scroll</span>(<span class="number">0</span>,<span class="variable language_">window</span>.<span class="property">pageYOffset</span> + step)</span><br><span class="line">&#125;,time)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="函数运用"><a href="#函数运用" class="headerlink" title="函数运用"></a>函数运用</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">move</span>(obj,time,target)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;函数封装&quot;&gt;&lt;a href=&quot;#函数封装&quot; class=&quot;headerlink&quot; title=&quot;函数封装&quot;&gt;&lt;/a&gt;函数封装&lt;/h2&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;</summary>
      
    
    
    
    <category term="JavaScript" scheme="https://www.coder-life.top/categories/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="https://www.coder-life.top/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript函数封装--缓动动画(不支持&#39;回到顶部&#39;的动画的过渡)</title>
    <link href="https://www.coder-life.top/2022/07/24/JavaScript%E5%87%BD%E6%95%B0%E5%B0%81%E8%A3%85-%E7%BC%93%E5%8A%A8%E5%8A%A8%E7%94%BB-%E4%B8%8D%E6%94%AF%E6%8C%81-%E5%9B%9E%E5%88%B0%E9%A1%B6%E9%83%A8-%E7%9A%84%E5%8A%A8%E7%94%BB%E7%9A%84%E8%BF%87%E6%B8%A1/"/>
    <id>https://www.coder-life.top/2022/07/24/JavaScript%E5%87%BD%E6%95%B0%E5%B0%81%E8%A3%85-%E7%BC%93%E5%8A%A8%E5%8A%A8%E7%94%BB-%E4%B8%8D%E6%94%AF%E6%8C%81-%E5%9B%9E%E5%88%B0%E9%A1%B6%E9%83%A8-%E7%9A%84%E5%8A%A8%E7%94%BB%E7%9A%84%E8%BF%87%E6%B8%A1/</id>
    <published>2022-07-24T09:03:18.000Z</published>
    <updated>2022-07-24T09:17:01.462Z</updated>
    
    <content type="html"><![CDATA[<h2 id="函数封装"><a href="#函数封装" class="headerlink" title="函数封装"></a>函数封装</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">// obj:盒子对象</span></span><br><span class="line"> <span class="comment">// target:目标位置</span></span><br><span class="line"> <span class="comment">// time:运动时间</span></span><br><span class="line"> <span class="comment">// callback:回调函数</span></span><br><span class="line"> <span class="keyword">function</span> <span class="title function_">move</span>(<span class="params">obj,target,time,callback</span>)&#123;</span><br><span class="line"><span class="comment">// 清除定时器,防止多次点击加快移动速度和创建新的定时器</span></span><br><span class="line"><span class="built_in">clearInterval</span>(obj.<span class="property">timer</span>)</span><br><span class="line"><span class="comment">// 结束</span></span><br><span class="line">obj.<span class="property">timer</span> = <span class="built_in">setInterval</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="comment">// 缓动动画原理</span></span><br><span class="line"><span class="comment">// (目标位置-现在位置)/10</span></span><br><span class="line"><span class="keyword">var</span> step = (target - obj.<span class="property">offsetLeft</span>) / <span class="number">10</span>;</span><br><span class="line">step  = step &gt; <span class="number">0</span> ?<span class="title class_">Math</span>.<span class="title function_">ceil</span>(step) : <span class="title class_">Math</span>.<span class="title function_">floor</span>(step)</span><br><span class="line"><span class="comment">// 步行算法结束</span></span><br><span class="line"><span class="keyword">if</span>(obj.<span class="property">offsetLeft</span> == target)&#123;</span><br><span class="line"><span class="built_in">clearInterval</span>(obj.<span class="property">timer</span>)</span><br><span class="line"><span class="comment">// 回调函数,如果有就执行,如果没有就不执行</span></span><br><span class="line"><span class="keyword">if</span>(callback)&#123;</span><br><span class="line"><span class="title function_">callback</span>()</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 回调函数结束</span></span><br><span class="line">&#125;</span><br><span class="line">obj.<span class="property">style</span>.<span class="property">left</span> = obj.<span class="property">offsetLeft</span> + step +<span class="string">&#x27;px&#x27;</span></span><br><span class="line">&#125;,time)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="如何使用函数"><a href="#如何使用函数" class="headerlink" title="如何使用函数"></a>如何使用函数</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 中间的px和ms只是告诉你单位,在调用函数的时候不需要添加上去</span></span><br><span class="line"><span class="comment">// 如果函数名出现冲突,可以按照个人喜好修改</span></span><br><span class="line"><span class="comment">// 例如:function animateMove()&#123;&#125;等等</span></span><br><span class="line"><span class="title function_">move</span>(obj,___px,___ms)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;函数封装&quot;&gt;&lt;a href=&quot;#函数封装&quot; class=&quot;headerlink&quot; title=&quot;函数封装&quot;&gt;&lt;/a&gt;函数封装&lt;/h2&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;</summary>
      
    
    
    
    <category term="JavaScript" scheme="https://www.coder-life.top/categories/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="https://www.coder-life.top/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>es6中不同函数的this指向问题(!)</title>
    <link href="https://www.coder-life.top/2022/07/24/es6%E4%B8%AD%E4%B8%8D%E5%90%8C%E5%87%BD%E6%95%B0%E7%9A%84this%E6%8C%87%E5%90%91%E9%97%AE%E9%A2%98/"/>
    <id>https://www.coder-life.top/2022/07/24/es6%E4%B8%AD%E4%B8%8D%E5%90%8C%E5%87%BD%E6%95%B0%E7%9A%84this%E6%8C%87%E5%90%91%E9%97%AE%E9%A2%98/</id>
    <published>2022-07-24T08:52:28.000Z</published>
    <updated>2022-07-24T09:00:46.656Z</updated>
    
    <content type="html"><![CDATA[<h2 id="普通函数"><a href="#普通函数" class="headerlink" title="普通函数"></a>普通函数</h2><pre><code>this指向window</code></pre><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1111</span>+<span class="variable language_">this</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">fn</span>()</span><br><span class="line"><span class="comment">// fn(),fn.call()</span></span><br></pre></td></tr></table></figure><h2 id="对象的方法"><a href="#对象的方法" class="headerlink" title="对象的方法"></a>对象的方法</h2><pre><code>this指向的是o,也就是函数调用者</code></pre><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">   <span class="keyword">let</span> o = &#123;</span><br><span class="line"><span class="attr">sayHi</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1111</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">    o.<span class="title function_">sayHi</span>()</span><br></pre></td></tr></table></figure><h2 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h2><pre><code>this指向的实例对象,也就是例子中的ldh,原型对象里面的this指向的是ldh这个实例对象</code></pre><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Star</span>(<span class="params"></span>)&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="title class_">Star</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">sing</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> ldh = <span class="keyword">new</span> <span class="title class_">Star</span>()</span><br></pre></td></tr></table></figure><h2 id="绑定事件函数"><a href="#绑定事件函数" class="headerlink" title="绑定事件函数"></a>绑定事件函数</h2><pre><code>this指向的是函数的调用者</code></pre><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">btn.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;&#125;</span><br></pre></td></tr></table></figure><h2 id="定时器函数"><a href="#定时器函数" class="headerlink" title="定时器函数"></a>定时器函数</h2><pre><code>this指向的也是window</code></pre><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="built_in">setInterval</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;&#125;,<span class="number">1000</span>)</span><br></pre></td></tr></table></figure><h2 id="立即执行函数"><a href="#立即执行函数" class="headerlink" title="立即执行函数"></a>立即执行函数</h2><pre><code>this指向的是window</code></pre><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">11111</span>)</span><br><span class="line">&#125;)()</span><br><span class="line">   <span class="comment">// 立即执行函数是立即调用</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;普通函数&quot;&gt;&lt;a href=&quot;#普通函数&quot; class=&quot;headerlink&quot; title=&quot;普通函数&quot;&gt;&lt;/a&gt;普通函数&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;this指向window
&lt;/code&gt;&lt;/pre&gt;
&lt;figure class=&quot;highlight js</summary>
      
    
    
    
    
    <category term="JavaScript,es6" scheme="https://www.coder-life.top/tags/JavaScript-es6/"/>
    
  </entry>
  
  <entry>
    <title>Hexo入门-快速搭建Hexo</title>
    <link href="https://www.coder-life.top/2022/07/24/Hexo%E5%85%A5%E9%97%A8-%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BAHexo/"/>
    <id>https://www.coder-life.top/2022/07/24/Hexo%E5%85%A5%E9%97%A8-%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BAHexo/</id>
    <published>2022-07-24T08:34:47.000Z</published>
    <updated>2022-07-24T09:16:44.758Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-安装Hexo"><a href="#1-安装Hexo" class="headerlink" title="1.安装Hexo"></a>1.安装Hexo</h2><p>这个是局部安装</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">npm</span> <span class="string">install</span> <span class="string">hexo</span></span><br></pre></td></tr></table></figure><p>全局安装hexo</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">npm</span> <span class="string">install</span> <span class="string">-g</span> <span class="string">hexo</span></span><br></pre></td></tr></table></figure><h2 id="2-创建hexo文件夹"><a href="#2-创建hexo文件夹" class="headerlink" title="2.创建hexo文件夹"></a>2.创建hexo文件夹</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">hexo</span> <span class="string">init</span> <span class="string">documentTitle</span></span><br></pre></td></tr></table></figure><h2 id="3-跳转第二个步骤中的文件夹下"><a href="#3-跳转第二个步骤中的文件夹下" class="headerlink" title="3.跳转第二个步骤中的文件夹下"></a>3.跳转第二个步骤中的文件夹下</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">cd</span> <span class="string">documentTitle</span></span><br></pre></td></tr></table></figure><h2 id="4-将npm包管理安装到该文件下"><a href="#4-将npm包管理安装到该文件下" class="headerlink" title="4.将npm包管理安装到该文件下"></a>4.将npm包管理安装到该文件下</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">npm</span> <span class="string">instal</span></span><br></pre></td></tr></table></figure><h2 id="5-运行hexo"><a href="#5-运行hexo" class="headerlink" title="5.运行hexo"></a>5.运行hexo</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">hexo</span> <span class="string">server</span></span><br></pre></td></tr></table></figure><p>如果出现</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">INFO</span>  <span class="string">Hexo</span> <span class="string">is</span> <span class="string">running</span> <span class="string">at</span> <span class="string">http://localhost:4000/</span> <span class="string">.</span> <span class="string">Press</span> <span class="string">Ctrl+C</span> <span class="string">to</span> <span class="string">stop.</span></span><br></pre></td></tr></table></figure><p>则说明你的hexo框架基本已经运行完成了</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-安装Hexo&quot;&gt;&lt;a href=&quot;#1-安装Hexo&quot; class=&quot;headerlink&quot; title=&quot;1.安装Hexo&quot;&gt;&lt;/a&gt;1.安装Hexo&lt;/h2&gt;&lt;p&gt;这个是局部安装&lt;/p&gt;
&lt;figure class=&quot;highlight yaml&quot;&gt;&lt;ta</summary>
      
    
    
    
    <category term="框架" scheme="https://www.coder-life.top/categories/%E6%A1%86%E6%9E%B6/"/>
    
    
    <category term="框架安装" scheme="https://www.coder-life.top/tags/%E6%A1%86%E6%9E%B6%E5%AE%89%E8%A3%85/"/>
    
  </entry>
  
  <entry>
    <title>第一篇文章</title>
    <link href="https://www.coder-life.top/2022/07/24/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/"/>
    <id>https://www.coder-life.top/2022/07/24/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</id>
    <published>2022-07-24T08:13:30.000Z</published>
    <updated>2022-07-24T08:13:50.537Z</updated>
    
    <content type="html"><![CDATA[<h2 id="First"><a href="#First" class="headerlink" title="First"></a>First</h2><p>First article</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;First&quot;&gt;&lt;a href=&quot;#First&quot; class=&quot;headerlink&quot; title=&quot;First&quot;&gt;&lt;/a&gt;First&lt;/h2&gt;&lt;p&gt;First article&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
</feed>
